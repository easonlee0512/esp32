[
    {
        "id": "a99ef80a0efd40bf",
        "type": "tab",
        "label": "流程2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "a5e3f259d2f89190",
        "type": "mqtt-broker",
        "name": "",
        "broker": "172.20.10.5",
        "port": 1883,
        "clientid": "NodeRED-Client",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": 4,
        "keepalive": 60,
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "smartlamp/light",
        "birthQos": "0",
        "birthRetain": "true",
        "birthPayload": "{\"brightness\":255}",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "02ec12f6d66023d4",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "d6f76d64aa7b5c7c",
        "type": "ui_tab",
        "name": "智慧檯燈",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "be04ad157ba60ed9",
        "type": "ui_group",
        "name": "環境數據",
        "tab": "d6f76d64aa7b5c7c",
        "order": 1,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "light_control_group",
        "type": "ui_group",
        "name": "燈光控制",
        "tab": "d6f76d64aa7b5c7c",
        "order": 4,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "c48ba298d806d659",
        "type": "ui_group",
        "name": "久坐提醒",
        "tab": "d6f76d64aa7b5c7c",
        "order": 2,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "56d1777e6eaf235f",
        "type": "MySQLdatabase",
        "name": "",
        "host": "127.0.0.1",
        "port": "3306",
        "db": "smartlamp",
        "tz": "",
        "charset": "UTF8"
    },
    {
        "id": "ba8a8c54f9a14376",
        "type": "ui_group",
        "name": "鬧鐘設定",
        "tab": "d6f76d64aa7b5c7c",
        "order": 3,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "ef90689b4f18d9b3",
        "type": "mqtt in",
        "z": "a99ef80a0efd40bf",
        "name": "環境數據",
        "topic": "smartlamp/environment",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "a5e3f259d2f89190",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 360,
        "y": 220,
        "wires": [
            [
                "fa58d6e5ed3e05de",
                "87271953ac998ebe"
            ]
        ]
    },
    {
        "id": "626fdef19060324f",
        "type": "mqtt in",
        "z": "a99ef80a0efd40bf",
        "name": "久坐提醒",
        "topic": "smartlamp/reminder",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "a5e3f259d2f89190",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 340,
        "y": 340,
        "wires": [
            [
                "ade2b1c48aba2452",
                "bad58b6f8a9b2a3b"
            ]
        ]
    },
    {
        "id": "fa58d6e5ed3e05de",
        "type": "debug",
        "z": "a99ef80a0efd40bf",
        "name": "debug 1",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 540,
        "y": 180,
        "wires": []
    },
    {
        "id": "ade2b1c48aba2452",
        "type": "debug",
        "z": "a99ef80a0efd40bf",
        "name": "debug 2",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 540,
        "y": 340,
        "wires": []
    },
    {
        "id": "520bdc83015c57e1",
        "type": "ui_gauge",
        "z": "a99ef80a0efd40bf",
        "name": "",
        "group": "be04ad157ba60ed9",
        "order": 2,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "溫度",
        "label": "°C",
        "format": "{{value}}",
        "min": 0,
        "max": "40",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 770,
        "y": 180,
        "wires": []
    },
    {
        "id": "87271953ac998ebe",
        "type": "function",
        "z": "a99ef80a0efd40bf",
        "name": "處理環境數據",
        "func": "// 解析JSON數據（如果尚未解析）\nlet data = msg.payload;\nif (typeof data === 'string') {\n    try {\n        data = JSON.parse(data);\n    } catch (e) {\n        node.error(\"無法解析JSON: \" + e.message);\n        return null;\n    }\n}\n\n// 確保數據格式正確\nif (!data || typeof data !== 'object') {\n    node.error(\"無效的數據格式\");\n    return null;\n}\n\n// 準備三個獨立的消息對象\nlet tempMsg = { topic: \"temperature\" };\nlet humidMsg = { topic: \"humidity\" };\nlet lightMsg = { topic: \"light\" };\n\n// 提取並格式化數據\nif (data.hasOwnProperty('temperature')) {\n    tempMsg.payload = parseFloat(data.temperature).toFixed(1);\n} else {\n    tempMsg = null;\n}\n\nif (data.hasOwnProperty('humidity')) {\n    humidMsg.payload = parseFloat(data.humidity).toFixed(1);\n} else {\n    humidMsg = null;\n}\n\nif (data.hasOwnProperty('light')) {\n    lightMsg.payload = parseInt(data.light);\n} else {\n    lightMsg = null;\n}\n\n// 添加時間戳記，用於圖表顯示\nconst now = new Date();\nif (tempMsg) tempMsg.timestamp = now;\nif (humidMsg) humidMsg.timestamp = now;\nif (lightMsg) lightMsg.timestamp = now;\n\n// 返回三個消息對象，對應三個輸出\nreturn [tempMsg, humidMsg, lightMsg];",
        "outputs": 3,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 240,
        "wires": [
            [
                "520bdc83015c57e1"
            ],
            [
                "667fc466919ddd0c"
            ],
            [
                "78473980125dfb8b"
            ]
        ]
    },
    {
        "id": "bad58b6f8a9b2a3b",
        "type": "function",
        "z": "a99ef80a0efd40bf",
        "name": "處理久坐提醒",
        "func": "// 解析JSON數據（如果尚未解析）\nlet data = msg.payload;\nif (typeof data === 'string') {\n    try {\n        data = JSON.parse(data);\n    } catch (e) {\n        node.error(\"無法解析JSON: \" + e.message);\n        return null;\n    }\n}\n\n// 確保數據格式正確\nif (!data || typeof data !== 'object') {\n    node.error(\"無效的數據格式\");\n    return null;\n}\n\n// 準備兩個獨立的消息對象\nlet statusMsg = { topic: \"sitting_status\" };\nlet durationMsg = { topic: \"sitting_duration\" };\n\n// 提取坐姿狀態\nif (data.hasOwnProperty('sitting')) {\n    statusMsg.payload = data.sitting === true || data.sitting === \"true\" ? \"坐著\" : \"未坐\";\n} else {\n    statusMsg = null;\n}\n\n// 提取坐姿時間\nif (data.hasOwnProperty('duration')) {\n    const duration = parseInt(data.duration);\n    durationMsg.payload = duration;\n\n    // 添加警告訊息\n    if (duration >= 600) { // 10分鐘\n        durationMsg.warning = true;\n        durationMsg.message = \"久坐警告！請起身活動\";\n    } else {\n        durationMsg.warning = false;\n    }\n} else {\n    durationMsg = null;\n}\n\n// 返回兩個消息對象\nreturn [statusMsg, durationMsg];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 400,
        "wires": [
            [
                "acb2774fc44678e9"
            ],
            [
                "2086739eef16825d"
            ]
        ]
    },
    {
        "id": "667fc466919ddd0c",
        "type": "ui_gauge",
        "z": "a99ef80a0efd40bf",
        "name": "",
        "group": "be04ad157ba60ed9",
        "order": 3,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "濕度",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 770,
        "y": 260,
        "wires": []
    },
    {
        "id": "78473980125dfb8b",
        "type": "ui_gauge",
        "z": "a99ef80a0efd40bf",
        "name": "",
        "group": "be04ad157ba60ed9",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "光線強度",
        "label": "units",
        "format": "{{value}}",
        "min": 0,
        "max": "1000",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 780,
        "y": 320,
        "wires": []
    },
    {
        "id": "acb2774fc44678e9",
        "type": "ui_text",
        "z": "a99ef80a0efd40bf",
        "group": "c48ba298d806d659",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "當前狀態",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 740,
        "y": 380,
        "wires": []
    },
    {
        "id": "2086739eef16825d",
        "type": "ui_gauge",
        "z": "a99ef80a0efd40bf",
        "name": "",
        "group": "c48ba298d806d659",
        "order": 2,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "已坐時間",
        "label": "sec",
        "format": "{{value}}",
        "min": 0,
        "max": "600",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 720,
        "y": 420,
        "wires": []
    },
    {
        "id": "bf6755a4c8b303de",
        "type": "function",
        "z": "a99ef80a0efd40bf",
        "name": "轉換為秒數",
        "func": "// 將分鐘轉換為秒並格式化為JSON\nmsg.payload = {\n    reminder_time: msg.payload * 60\n};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 540,
        "wires": [
            [
                "83df973652a30b9e"
            ]
        ]
    },
    {
        "id": "e520fc14cd983469",
        "type": "ui_slider",
        "z": "a99ef80a0efd40bf",
        "name": "",
        "label": "久坐提醒時間設定",
        "tooltip": "",
        "group": "c48ba298d806d659",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "all",
        "topic": "topic",
        "topicType": "msg",
        "min": "1",
        "max": "10",
        "step": 1,
        "className": "",
        "x": 370,
        "y": 520,
        "wires": [
            [
                "bf6755a4c8b303de"
            ]
        ]
    },
    {
        "id": "83df973652a30b9e",
        "type": "mqtt out",
        "z": "a99ef80a0efd40bf",
        "name": "設定久坐時間",
        "topic": "smartlamp/settings/sitting_reminder",
        "qos": "0",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "a5e3f259d2f89190",
        "x": 760,
        "y": 500,
        "wires": []
    },
    {
        "id": "7e38160211909cdc",
        "type": "mqtt in",
        "z": "a99ef80a0efd40bf",
        "name": "",
        "topic": "smartlamp/reminder",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "a5e3f259d2f89190",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 430,
        "y": 620,
        "wires": [
            [
                "6165e3bedc57c224",
                "55d5da4ef2daee14"
            ]
        ]
    },
    {
        "id": "6165e3bedc57c224",
        "type": "function",
        "z": "a99ef80a0efd40bf",
        "name": "function 1",
        "func": "if (msg.payload) {\n    try {\n        // 如果訊息是字串，先解析為JSON\n        let data = msg.payload;\n        if (typeof data === 'string') {\n            data = JSON.parse(data);\n        }\n\n        if (data.threshold) {\n            msg.payload = \"目前久坐提醒時間：\" + data.threshold + \" 秒\";\n            return msg;\n        }\n    } catch (e) {\n        node.error(\"解析JSON錯誤: \" + e.message);\n    }\n}\nreturn null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 600,
        "wires": [
            [
                "e476edcbc3c6a8a4"
            ]
        ]
    },
    {
        "id": "e476edcbc3c6a8a4",
        "type": "ui_text",
        "z": "a99ef80a0efd40bf",
        "group": "c48ba298d806d659",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "目前久坐提醒時間",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 830,
        "y": 600,
        "wires": []
    },
    {
        "id": "55d5da4ef2daee14",
        "type": "debug",
        "z": "a99ef80a0efd40bf",
        "name": "debug 3",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 620,
        "y": 680,
        "wires": []
    },
    {
        "id": "85143f61fdbdd539",
        "type": "mysql",
        "z": "a99ef80a0efd40bf",
        "mydb": "56d1777e6eaf235f",
        "name": "SittingDB",
        "x": 940,
        "y": 740,
        "wires": [
            [
                "f68923ce0bfcf67f"
            ]
        ]
    },
    {
        "id": "c32c650d81538f9c",
        "type": "mqtt in",
        "z": "a99ef80a0efd40bf",
        "name": "",
        "topic": "smartlamp/reminder",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "a5e3f259d2f89190",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 350,
        "y": 740,
        "wires": [
            [
                "bfd0c0e643795e12"
            ]
        ]
    },
    {
        "id": "bfd0c0e643795e12",
        "type": "function",
        "z": "a99ef80a0efd40bf",
        "name": "檢測讀書時間",
        "func": "// 首先正確解析JSON字串\nlet data;\nif (typeof msg.payload === 'string') {\n    try {\n        data = JSON.parse(msg.payload);\n    } catch (e) {\n        node.error(\"JSON解析錯誤: \" + e.message);\n        return null;\n    }\n} else {\n    data = msg.payload;\n}\n\n// 使用持久化儲存\nconst currentSitting = data.sitting === true || data.sitting === \"true\";\nconst lastSitting = context.get('lastSitting', 'file') || false;\nconst duration = parseInt(data.duration || 0);\n\n// 調試輸出\nnode.warn(\"解析後數據: \" + JSON.stringify(data));\nnode.warn(\"狀態: 目前=\" + (currentSitting ? \"坐著\" : \"未坐著\") +\n    \", 上次=\" + (lastSitting ? \"坐著\" : \"未坐著\"));\n\n// 如果剛坐下（狀態從false變為true）\nif (currentSitting && !lastSitting) {\n    // 記錄開始坐下的時間\n    const startTime = new Date();\n    context.set('sittingStartTime', startTime.toISOString(), 'file');\n    context.set('lastSitting', true, 'file');\n\n    node.warn(\"使用者開始坐下: \" + startTime.toISOString());\n    return null;\n}\n\n// 如果剛站起（狀態從true變為false）\nif (!currentSitting && lastSitting) {\n    // 獲取開始時間\n    const startTimeStr = context.get('sittingStartTime', 'file');\n    if (!startTimeStr) {\n        node.warn(\"錯誤: 找不到開始坐下時間\");\n        context.set('lastSitting', false, 'file');\n        return null;\n    }\n\n    // 計算時間差\n    const endTime = new Date();\n    const startTime = new Date(startTimeStr);\n    const durationSec = Math.floor((endTime - startTime) / 1000);\n\n    // 格式化為MySQL日期格式\n    const formatDate = (date) => {\n        return date.toISOString().slice(0, 19).replace('T', ' ');\n    };\n\n    // 創建SQL指令\n    msg.topic = \"INSERT INTO sitting_records (start_time, end_time, duration_seconds) VALUES (?, ?, ?)\";\n    msg.payload = [\n        formatDate(startTime),\n        formatDate(endTime),\n        durationSec\n    ];\n\n    // 重置狀態\n    context.set('lastSitting', false, 'file');\n\n    node.warn(\"使用者站起: 持續了 \" + durationSec + \" 秒\");\n    node.warn(\"SQL: \" + msg.topic);\n    node.warn(\"參數: \" + JSON.stringify(msg.payload));\n\n    return msg;\n}\n\n// 狀態未變化，僅更新當前狀態\ncontext.set('lastSitting', currentSitting, 'file');\nreturn null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 3,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 780,
        "wires": [
            [
                "b91488ba884447fe",
                "85143f61fdbdd539"
            ]
        ]
    },
    {
        "id": "b91488ba884447fe",
        "type": "debug",
        "z": "a99ef80a0efd40bf",
        "name": "debug 4",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 860,
        "wires": []
    },
    {
        "id": "f68923ce0bfcf67f",
        "type": "debug",
        "z": "a99ef80a0efd40bf",
        "name": "debug 5",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 740,
        "wires": []
    },
    {
        "id": "258248259d61ac4d",
        "type": "inject",
        "z": "a99ef80a0efd40bf",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1800",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "iso",
        "payloadType": "date",
        "x": 280,
        "y": 900,
        "wires": [
            [
                "4e478e7f258e48fa"
            ]
        ]
    },
    {
        "id": "55f6d1d209809ea0",
        "type": "mysql",
        "z": "a99ef80a0efd40bf",
        "mydb": "56d1777e6eaf235f",
        "name": "SittingDB",
        "x": 460,
        "y": 900,
        "wires": [
            [
                "c3c537b3237c54e0",
                "01d6728f4bc8b878"
            ]
        ]
    },
    {
        "id": "c3c537b3237c54e0",
        "type": "function",
        "z": "a99ef80a0efd40bf",
        "name": "function 2",
        "func": "// 檢查是否有數據\nif (!msg.payload || !Array.isArray(msg.payload) || msg.payload.length === 0) {\n    node.warn(\"沒有久坐記錄\");\n    // 返回空數據，避免圖表錯誤\n    msg.payload = [];\n    return msg;\n}\n\n// 調試輸出\nnode.warn(\"原始數據: \" + JSON.stringify(msg.payload));\n\n// 準備圖表數據\nlet chartData = [];\n\n// 將記錄排序為時間順序（從舊到新）\nconst records = msg.payload.sort((a, b) =>\n    new Date(a.start_time) - new Date(b.start_time));\n\n// 格式化時間顯示 (HH:MM)\nconst formatTime = (dateStr) => {\n    const d = new Date(dateStr);\n    return d.getHours() + \":\" +\n        (d.getMinutes() < 10 ? \"0\" + d.getMinutes() : d.getMinutes());\n};\n\n// 格式化日期 (MM/DD)\nconst formatDate = (dateStr) => {\n    const d = new Date(dateStr);\n    return (d.getMonth() + 1) + \"/\" + d.getDate();\n};\n\n// 建立數據結構\nlet series = [\"久坐時間\"];\nlet data = [[]];\nlet labels = [];\n\n// 將每條記錄轉為圖表數據\nrecords.forEach(record => {\n    // 計算持續時間（分鐘）並四捨五入到一位小數\n    const durationMins = Math.round((record.duration_seconds / 60) * 10) / 10;\n\n    // 建立標籤：日期 + 開始時間\n    const label = formatDate(record.start_time) + \" \" + formatTime(record.start_time);\n\n    // 添加到數據陣列\n    labels.push(label);\n    data[0].push(durationMins);\n});\n\n// 構建圖表最終格式\nmsg.payload = [{\n    series: series,\n    data: data,\n    labels: labels\n}];\n\nnode.warn(\"輸出到圖表的數據: \" + JSON.stringify(msg.payload));\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 4,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 940,
        "wires": [
            [
                "a5e6490617193ae4",
                "c5a9a862854446a4"
            ]
        ]
    },
    {
        "id": "a5e6490617193ae4",
        "type": "ui_chart",
        "z": "a99ef80a0efd40bf",
        "name": "",
        "group": "c48ba298d806d659",
        "order": 1,
        "width": "6",
        "height": "6",
        "label": "久坐時段分布",
        "chartType": "bar",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "0",
        "ymax": "10",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 880,
        "y": 940,
        "wires": [
            [
                "86ff789143437ca5"
            ]
        ]
    },
    {
        "id": "4e478e7f258e48fa",
        "type": "function",
        "z": "a99ef80a0efd40bf",
        "name": "function 3",
        "func": "// 設置SQL查詢到msg.topic\nmsg.topic = `SELECT \n  id,\n  start_time,\n  end_time,\n  duration_seconds\nFROM \n  sitting_records\nORDER BY \n  start_time DESC\nLIMIT 20`;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 840,
        "wires": [
            [
                "55f6d1d209809ea0",
                "2575960f33448def"
            ]
        ]
    },
    {
        "id": "01d6728f4bc8b878",
        "type": "debug",
        "z": "a99ef80a0efd40bf",
        "name": "debug 6",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 1000,
        "wires": []
    },
    {
        "id": "c5a9a862854446a4",
        "type": "debug",
        "z": "a99ef80a0efd40bf",
        "name": "debug 7",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 840,
        "y": 1020,
        "wires": []
    },
    {
        "id": "86ff789143437ca5",
        "type": "debug",
        "z": "a99ef80a0efd40bf",
        "name": "debug 8",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 980,
        "wires": []
    },
    {
        "id": "2575960f33448def",
        "type": "debug",
        "z": "a99ef80a0efd40bf",
        "name": "debug 9",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 840,
        "wires": []
    },
    {
        "id": "017fc836e85fd3fb",
        "type": "ui_dropdown",
        "z": "a99ef80a0efd40bf",
        "name": "",
        "label": "小時",
        "tooltip": "",
        "place": "選擇小時",
        "group": "ba8a8c54f9a14376",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "00",
                "value": "0",
                "type": "str"
            },
            {
                "label": "01",
                "value": "1",
                "type": "str"
            },
            {
                "label": "02",
                "value": "2",
                "type": "str"
            },
            {
                "label": "03",
                "value": "3",
                "type": "str"
            },
            {
                "label": "04",
                "value": "4",
                "type": "str"
            },
            {
                "label": "05",
                "value": "5",
                "type": "str"
            },
            {
                "label": "06",
                "value": "6",
                "type": "str"
            },
            {
                "label": "07",
                "value": "7",
                "type": "str"
            },
            {
                "label": "08",
                "value": "8",
                "type": "str"
            },
            {
                "label": "09",
                "value": "9",
                "type": "str"
            },
            {
                "label": "10",
                "value": "10",
                "type": "str"
            },
            {
                "label": "11",
                "value": "11",
                "type": "str"
            },
            {
                "label": "12",
                "value": "12",
                "type": "str"
            },
            {
                "label": "13",
                "value": "13",
                "type": "str"
            },
            {
                "label": "14",
                "value": "14",
                "type": "str"
            },
            {
                "label": "15",
                "value": "15",
                "type": "str"
            },
            {
                "label": "16",
                "value": "16",
                "type": "str"
            },
            {
                "label": "17",
                "value": "17",
                "type": "str"
            },
            {
                "label": "18",
                "value": "18",
                "type": "str"
            },
            {
                "label": "19",
                "value": "19",
                "type": "str"
            },
            {
                "label": "20",
                "value": "20",
                "type": "str"
            },
            {
                "label": "21",
                "value": "21",
                "type": "str"
            },
            {
                "label": "22",
                "value": "22",
                "type": "str"
            },
            {
                "label": "23",
                "value": "23",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "alarm_hour",
        "topicType": "str",
        "className": "",
        "x": 250,
        "y": 1120,
        "wires": [
            [
                "9ed75c76ce1ab1cb"
            ]
        ]
    },
    {
        "id": "d2cae14b926975a6",
        "type": "ui_dropdown",
        "z": "a99ef80a0efd40bf",
        "name": "",
        "label": "分鐘",
        "tooltip": "",
        "place": "選擇分鐘",
        "group": "ba8a8c54f9a14376",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "00",
                "value": "0",
                "type": "str"
            },
            {
                "label": "05",
                "value": "5",
                "type": "str"
            },
            {
                "label": "10",
                "value": "10",
                "type": "str"
            },
            {
                "label": "15",
                "value": "15",
                "type": "str"
            },
            {
                "label": "20",
                "value": "20",
                "type": "str"
            },
            {
                "label": "25",
                "value": "25",
                "type": "str"
            },
            {
                "label": "30",
                "value": "30",
                "type": "str"
            },
            {
                "label": "35",
                "value": "35",
                "type": "str"
            },
            {
                "label": "40",
                "value": "40",
                "type": "str"
            },
            {
                "label": "45",
                "value": "45",
                "type": "str"
            },
            {
                "label": "50",
                "value": "50",
                "type": "str"
            },
            {
                "label": "55",
                "value": "55",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "alarm_minute",
        "topicType": "str",
        "className": "",
        "x": 250,
        "y": 1180,
        "wires": [
            [
                "9ed75c76ce1ab1cb"
            ]
        ]
    },
    {
        "id": "9ed75c76ce1ab1cb",
        "type": "join",
        "z": "a99ef80a0efd40bf",
        "name": "合併時間和開關",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "useparts": false,
        "accumulate": false,
        "timeout": "1",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 510,
        "y": 1180,
        "wires": [
            [
                "e1b2c35577f7dc93",
                "d9e5bbb21cee9773"
            ]
        ]
    },
    {
        "id": "e1b2c35577f7dc93",
        "type": "function",
        "z": "a99ef80a0efd40bf",
        "name": "function 4",
        "func": "// 獲取或保持最後的設定值\nvar context = flow.get('alarmSettings') || {\n    hour: 0,\n    minute: 0,\n    enabled: false\n};\n\n// 更新收到的新設定\nif (msg.topic === 'alarm_hour' && msg.payload !== undefined) {\n    context.hour = parseInt(msg.payload) || 0;\n    context.enabled = true;  // 當修改時間時自動啟用\n}\nif (msg.topic === 'alarm_minute' && msg.payload !== undefined) {\n    context.minute = parseInt(msg.payload) || 0;\n    context.enabled = true;  // 當修改時間時自動啟用\n}\nif (msg.topic === 'alarm_switch') {\n    // 反轉開關的值，因為UI開關的值是反的\n    context.enabled = !(msg.payload === true);\n}\n\n// 儲存更新後的設定\nflow.set('alarmSettings', context);\n\n// 確保數值在有效範圍內\ncontext.hour = Math.max(0, Math.min(23, context.hour));\ncontext.minute = Math.max(0, Math.min(59, context.minute));\n\n// 建立鬧鐘設定JSON\nmsg.payload = {\n    \"enabled\": context.enabled,\n    \"hour\": context.hour,\n    \"minute\": context.minute\n};\n\n// 更新節點狀態顯示\nnode.status({\n    fill: context.enabled ? \"green\" : \"red\",\n    shape: \"dot\",\n    text: \"時間: \" + context.hour + \":\" + (context.minute < 10 ? \"0\" : \"\") + context.minute + \", 啟用: \" + context.enabled\n});\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1180,
        "wires": [
            [
                "1ab20e6dc0b8d2d3",
                "d30e5987aea0cb90"
            ]
        ]
    },
    {
        "id": "522f5ec0b3bbf0b7",
        "type": "ui_switch",
        "z": "a99ef80a0efd40bf",
        "name": "",
        "label": "鬧鐘開關",
        "tooltip": "",
        "group": "ba8a8c54f9a14376",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "alarm_switch",
        "topicType": "str",
        "style": "",
        "onvalue": "false",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "true",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 260,
        "y": 1240,
        "wires": [
            [
                "9ed75c76ce1ab1cb"
            ]
        ]
    },
    {
        "id": "1ab20e6dc0b8d2d3",
        "type": "mqtt out",
        "z": "a99ef80a0efd40bf",
        "name": "發布鬧鐘設定",
        "topic": "smartlamp/settings/alarm",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "a5e3f259d2f89190",
        "x": 920,
        "y": 1180,
        "wires": []
    },
    {
        "id": "d30e5987aea0cb90",
        "type": "debug",
        "z": "a99ef80a0efd40bf",
        "name": "debug 10",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 1280,
        "wires": []
    },
    {
        "id": "14ba6d97ccb4067e",
        "type": "mqtt in",
        "z": "a99ef80a0efd40bf",
        "name": "訂閱鬧鐘狀態",
        "topic": "smartlamp/alarm/status",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "a5e3f259d2f89190",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 290,
        "y": 1360,
        "wires": [
            [
                "87d66fa0fd05dd6b",
                "774e326501b36f3a"
            ]
        ]
    },
    {
        "id": "87d66fa0fd05dd6b",
        "type": "json",
        "z": "a99ef80a0efd40bf",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 470,
        "y": 1360,
        "wires": [
            [
                "b22fa360ac0b772e"
            ]
        ]
    },
    {
        "id": "b22fa360ac0b772e",
        "type": "function",
        "z": "a99ef80a0efd40bf",
        "name": "function 5",
        "func": "var status = msg.payload;\n\nif (status.enabled) {\n    var hourStr = status.hour < 10 ? \"0\" + status.hour : status.hour;\n    var minStr = status.minute < 10 ? \"0\" + status.minute : status.minute;\n\n    msg.payload = \"鬧鐘已啟用，時間: \" + hourStr + \":\" + minStr;\n\n    if (status.triggered) {\n        msg.payload += \" (響鈴中)\";\n    }\n} else {\n    msg.payload = \"鬧鐘已關閉\";\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 1360,
        "wires": [
            [
                "8dec07f9d5b56ed0"
            ]
        ]
    },
    {
        "id": "8dec07f9d5b56ed0",
        "type": "ui_text",
        "z": "a99ef80a0efd40bf",
        "group": "ba8a8c54f9a14376",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "鬧鐘狀態顯示",
        "label": "當前狀態",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 880,
        "y": 1360,
        "wires": []
    },
    {
        "id": "774e326501b36f3a",
        "type": "debug",
        "z": "a99ef80a0efd40bf",
        "name": "debug 11",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 480,
        "y": 1440,
        "wires": []
    },
    {
        "id": "light_switch",
        "type": "ui_switch",
        "z": "a99ef80a0efd40bf",
        "name": "燈光開關",
        "label": "檯燈開關",
        "tooltip": "",
        "group": "light_control_group",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "light_switch",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "offvalue": "false",
        "offvalueType": "bool",
        "animate": false,
        "className": "",
        "x": 260,
        "y": 80,
        "wires": [
            [
                "light_function"
            ]
        ]
    },
    {
        "id": "light_function",
        "type": "function",
        "z": "a99ef80a0efd40bf",
        "name": "處理燈光控制",
        "func": "msg.payload = {\n    power: msg.payload\n};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 80,
        "wires": [
            [
                "light_mqtt_out",
                "light_debug"
            ]
        ]
    },
    {
        "id": "light_mqtt_out",
        "type": "mqtt out",
        "z": "a99ef80a0efd40bf",
        "name": "發送燈光控制",
        "topic": "smartlamp/light/control",
        "qos": "0",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "a5e3f259d2f89190",
        "x": 680,
        "y": 100,
        "wires": []
    },
    {
        "id": "light_status_in",
        "type": "mqtt in",
        "z": "a99ef80a0efd40bf",
        "name": "接收燈光狀態",
        "topic": "smartlamp/light/status",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "a5e3f259d2f89190",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 950,
        "y": 280,
        "wires": [
            [
                "light_status_function",
                "light_status_debug"
            ]
        ]
    },
    {
        "id": "light_status_function",
        "type": "function",
        "z": "a99ef80a0efd40bf",
        "name": "處理燈光狀態",
        "func": "// 檢查payload是否為物件\nif (typeof msg.payload === 'string') {\n    try {\n        msg.payload = JSON.parse(msg.payload);\n    } catch (e) {\n        node.error('解析燈光狀態錯誤: ' + e.message);\n        return null;\n    }\n}\n\n// 取得狀態\nif (msg.payload && msg.payload.status) {\n    msg.payload = msg.payload.status === 'on' ? '開啟' : '關閉';\n    return msg;\n} else {\n    node.error('無效的燈光狀態格式');\n    return null;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 240,
        "wires": [
            [
                "light_status_text"
            ]
        ]
    },
    {
        "id": "light_status_text",
        "type": "ui_text",
        "z": "a99ef80a0efd40bf",
        "group": "light_control_group",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "燈光狀態",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1360,
        "y": 240,
        "wires": []
    },
    {
        "id": "light_debug",
        "type": "debug",
        "z": "a99ef80a0efd40bf",
        "name": "燈光控制除錯",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 40,
        "wires": []
    },
    {
        "id": "light_status_debug",
        "type": "debug",
        "z": "a99ef80a0efd40bf",
        "name": "燈光狀態除錯",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1140,
        "y": 300,
        "wires": []
    },
    {
        "id": "http_endpoint",
        "type": "http in",
        "z": "a99ef80a0efd40bf",
        "name": "接收久坐記錄",
        "url": "/sitting-record",
        "method": "post",
        "upload": true,
        "swaggerDoc": "",
        "x": 160,
        "y": 1500,
        "wires": [
            [
                "parse_json_node",
                "0df2fe1b85a25767"
            ]
        ]
    },
    {
        "id": "parse_json_node",
        "type": "json",
        "z": "a99ef80a0efd40bf",
        "name": "解析JSON",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 320,
        "y": 1500,
        "wires": [
            [
                "process_sitting_record"
            ]
        ]
    },
    {
        "id": "process_sitting_record",
        "type": "function",
        "z": "a99ef80a0efd40bf",
        "name": "處理久坐記錄",
        "func": "// 驗證必要欄位\nif (!msg.payload || typeof msg.payload !== 'object') {\n    msg.statusCode = 400;\n    msg.payload = { error: '無效的數據格式' };\n    return [null, msg];\n}\n\nconst { sitting, alarm, duration, threshold } = msg.payload;\n\nif (sitting === undefined || duration === undefined) {\n    msg.statusCode = 400;\n    msg.payload = { error: '缺少必要欄位' };\n    return [null, msg];\n}\n\n// 準備資料庫查詢\nconst now = new Date();\nmsg.topic = 'INSERT INTO sitting_records (start_time, end_time, duration_seconds) VALUES (?, ?, ?)';\n\n// 計算開始時間\nconst endTime = now;\nconst startTime = new Date(now.getTime() - (duration * 1000));\n\nmsg.payload = [\n    startTime,\n    endTime,\n    duration\n];\n\nreturn [msg, { payload: { status: 'success' }, statusCode: 200 }];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 1500,
        "wires": [
            [
                "mysql_insert"
            ],
            [
                "http_response"
            ]
        ]
    },
    {
        "id": "mysql_insert",
        "type": "mysql",
        "z": "a99ef80a0efd40bf",
        "mydb": "56d1777e6eaf235f",
        "name": "插入資料庫",
        "x": 720,
        "y": 1480,
        "wires": [
            [
                "debug_mysql"
            ]
        ]
    },
    {
        "id": "http_response",
        "type": "http response",
        "z": "a99ef80a0efd40bf",
        "name": "回應",
        "statusCode": "",
        "headers": {},
        "x": 730,
        "y": 1540,
        "wires": []
    },
    {
        "id": "debug_mysql",
        "type": "debug",
        "z": "a99ef80a0efd40bf",
        "name": "MySQL除錯",
        "active": false,
        "tosidebar": true,
        "console": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 920,
        "y": 1480,
        "wires": []
    },
    {
        "id": "0df2fe1b85a25767",
        "type": "debug",
        "z": "a99ef80a0efd40bf",
        "name": "debug 13",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 320,
        "y": 1580,
        "wires": []
    },
    {
        "id": "d9e5bbb21cee9773",
        "type": "debug",
        "z": "a99ef80a0efd40bf",
        "name": "debug 12",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 1280,
        "wires": []
    }
]